{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/Ryan/Desktop/baseball_gql/webapp-hooks/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/Ryan/Desktop/baseball_gql/webapp-hooks/src/components/NameSearch.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    getPlayer(searchStr: String){\\n      name\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks'; //import { baseballActions } from '../state';\n//import { useStateValue } from './BaseballApp';\n//let NAME_SEARCH_URL: string = \"http://192.168.1.67:5000/player?str=\"\n\nconst PLAYER_QUERY = gql(_templateObject()); // NameSearch function for taking text entered and searching for closest player\n// whose name matches the text\n\nfunction NameSearch() {\n  // https://github.com/apollographql/apollo-client/blob/version-2.6/docs/source/data/queries.mdx\n  const _useQuery = useQuery(PLAYER_QUERY, {\n    variables: {\n      searchStr: \"Christian Yelich\"\n    }\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  console.log(error);\n  if (loading) return 'Loading...';\n  if (error) return \"Error! \".concat(error.message);\n  console.log(data);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, data);\n  /*return (\n    <div>\n      <input placeholder=\"Enter Player's Name\" name=\"playerText\" value={ data.getPlayer.searchStr } onChange={onPlayerTextEntered} />\n      <br />\n      <h3>{ data.getPlayer.name }</h3>\n    </div>\n  );*/\n}\n\n;\nexport default NameSearch;","map":{"version":3,"sources":["/Users/Ryan/Desktop/baseball_gql/webapp-hooks/src/components/NameSearch.tsx"],"names":["React","gql","useQuery","PLAYER_QUERY","NameSearch","variables","searchStr","loading","error","data","console","log","message"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB,C,CACA;AACA;AACA;;AAQA,MAAMC,YAAY,GAAGF,GAAH,mBAAlB,C,CASA;AACA;;AACA,SAASG,UAAT,GAA2B;AAEzB;AAFyB,oBAGQF,QAAQ,CAASC,YAAT,EAAuB;AAACE,IAAAA,SAAS,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb;AAAZ,GAAvB,CAHhB;AAAA,QAGjBC,OAHiB,aAGjBA,OAHiB;AAAA,QAGRC,KAHQ,aAGRA,KAHQ;AAAA,QAGDC,IAHC,aAGDA,IAHC;;AAIzBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,MAAID,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,wBAAiBA,KAAK,CAACI,OAAvB;AAEXF,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IADH,CADF;AAKA;;;;;;;AAOD;;AAAA;AAED,eAAeL,UAAf","sourcesContent":["import React from \"react\";\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\n//import { baseballActions } from '../state';\n//import { useStateValue } from './BaseballApp';\n//let NAME_SEARCH_URL: string = \"http://192.168.1.67:5000/player?str=\"\n\ninterface Player {\n  searchStr: string\n  name: string\n  id: number\n}\n\nconst PLAYER_QUERY = gql`\n  {\n    getPlayer(searchStr: String){\n      name\n      id\n    }\n  }\n`;\n\n// NameSearch function for taking text entered and searching for closest player\n// whose name matches the text\nfunction NameSearch(): any {\n\n  // https://github.com/apollographql/apollo-client/blob/version-2.6/docs/source/data/queries.mdx\n  const { loading, error, data } = useQuery<Player>(PLAYER_QUERY, {variables: { searchStr: \"Christian Yelich\"}});\n  console.log(error);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n\n  console.log(data);\n  return (\n    <div>\n      {data}\n    </div>\n  )\n  /*return (\n    <div>\n      <input placeholder=\"Enter Player's Name\" name=\"playerText\" value={ data.getPlayer.searchStr } onChange={onPlayerTextEntered} />\n      <br />\n      <h3>{ data.getPlayer.name }</h3>\n    </div>\n  );*/\n};\n\nexport default NameSearch;\n"]},"metadata":{},"sourceType":"module"}