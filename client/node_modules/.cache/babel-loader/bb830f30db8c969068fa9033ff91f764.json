{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/Ryan/Desktop/baseball_gql/webapp-hooks/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/Ryan/Desktop/baseball_gql/webapp-hooks/src/components/NameSearch.tsx\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    getPlayer(searchStr: \\\"Cody Bell\\\")\\n    {\\n      searchStr\\n      name\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  type Player {\\n    searchStr:String @client\\n    name:String @client\\n    id:Number @client\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { gql } from 'apollo-boost';\nimport { useQuery, useApolloClient } from '@apollo/react-hooks';\n\n/*const NameSearchProps = {\n  context: Object\n};*/\nconst PLAYER_CACHE = gql(_templateObject());\nconst PLAYER_QUERY = gql(_templateObject2());\n/*const PLAYER_QUERY = gql`\n  query Player($searchStr: String!){\n    player(searchStr: $searchStr){\n      searchStr\n      name\n      id\n    }\n  }\n`;*/\n// NameSearch function for taking text entered and searching for closest player\n// whose name matches the text\n\nfunction NameSearch() {\n  const client = useApolloClient();\n\n  const _useQuery = useQuery(PLAYER_QUERY, {\n    variables: {\n      searchStr: 'Christian Yel'\n    }\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"'Loading...'\");\n\n  if (error) {\n    console.warn(error);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"`Error! $\", error.message, \"`\");\n  }\n\n  console.log(data);\n  client.writeData({\n    data: {\n      //searchStr: searchStr,\n      name: data.getPlayer.name,\n      id: data.getPlayer.id\n    }\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Enter Player's Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, data.getPlayer.name));\n  /*return (\n    <div>\n      <input placeholder=\"Enter Player's Name\" name=\"playerText\" value={ data.getPlayer.searchStr } onChange={onPlayerTextEntered} />\n      <br />\n      <h3>{ data.getPlayer.name }</h3>\n    </div>\n  );*/\n}\n\n;\nexport default NameSearch;","map":{"version":3,"sources":["/Users/Ryan/Desktop/baseball_gql/webapp-hooks/src/components/NameSearch.tsx"],"names":["React","gql","useQuery","useApolloClient","PLAYER_CACHE","PLAYER_QUERY","NameSearch","client","variables","searchStr","loading","error","data","console","warn","message","log","writeData","name","getPlayer","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,qBAA1C;;AAGA;;;AAIA,MAAMC,YAAY,GAAGH,GAAH,mBAAlB;AAQA,MAAMI,YAAY,GAAGJ,GAAH,oBAAlB;AAWA;;;;;;;;;AAUA;AACA;;AACA,SAASK,UAAT,GAA2B;AACzB,QAAMC,MAAM,GAAGJ,eAAe,EAA9B;;AADyB,oBAEQD,QAAQ,CAACG,YAAD,EAAe;AAACG,IAAAA,SAAS,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb;AAAZ,GAAf,CAFhB;AAAA,QAEjBC,OAFiB,aAEjBA,OAFiB;AAAA,QAERC,KAFQ,aAERA,KAFQ;AAAA,QAEDC,IAFC,aAEDA,IAFC;;AAGzB,MAAIF,OAAJ,EAAa,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAR;;AACb,MAAIC,KAAJ,EAAW;AACTE,IAAAA,OAAO,CAACC,IAAR,CAAaH,KAAb;AACA,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeA,KAAK,CAACI,OAArB,MAAR;AACD;;AAEDF,EAAAA,OAAO,CAACG,GAAR,CAAYJ,IAAZ;AACAL,EAAAA,MAAM,CAACU,SAAP,CAAiB;AACfL,IAAAA,IAAI,EAAE;AACJ;AACAM,MAAAA,IAAI,EAAEN,IAAI,CAACO,SAAL,CAAeD,IAFjB;AAGJE,MAAAA,EAAE,EAAER,IAAI,CAACO,SAAL,CAAeC;AAHf;AADS,GAAjB;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,WAAW,EAAC,qBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,IAAI,CAACO,SAAL,CAAeD,IAApB,CAHF,CADF;AAOA;;;;;;;AAOD;;AAAA;AAED,eAAeZ,UAAf","sourcesContent":["import React from \"react\";\nimport { gql } from 'apollo-boost';\nimport { useQuery, useApolloClient } from '@apollo/react-hooks';\nimport { typeDefs } from './BaseballApp';\n\n/*const NameSearchProps = {\n  context: Object\n};*/\n\nconst PLAYER_CACHE = gql`\n  type Player {\n    searchStr:String @client\n    name:String @client\n    id:Number @client\n  }\n`;\n\nconst PLAYER_QUERY = gql`\n  {\n    getPlayer(searchStr: \"Cody Bell\")\n    {\n      searchStr\n      name\n      id\n    }\n  }\n`;\n\n/*const PLAYER_QUERY = gql`\n  query Player($searchStr: String!){\n    player(searchStr: $searchStr){\n      searchStr\n      name\n      id\n    }\n  }\n`;*/\n\n// NameSearch function for taking text entered and searching for closest player\n// whose name matches the text\nfunction NameSearch(): any {\n  const client = useApolloClient();\n  const { loading, error, data } = useQuery(PLAYER_QUERY, {variables: { searchStr: 'Christian Yel'}});\n  if (loading) return (<div>'Loading...'</div>);\n  if (error) {\n    console.warn(error);\n    return (<div>`Error! ${error.message}`</div>);\n  }\n\n  console.log(data);\n  client.writeData({\n    data: {\n      //searchStr: searchStr,\n      name: data.getPlayer.name,\n      id: data.getPlayer.id,\n    }\n  });\n  return (\n    <div>\n      <input placeholder=\"Enter Player's Name\" />\n      <br/>\n      <h3>{data.getPlayer.name}</h3>\n    </div>\n  )\n  /*return (\n    <div>\n      <input placeholder=\"Enter Player's Name\" name=\"playerText\" value={ data.getPlayer.searchStr } onChange={onPlayerTextEntered} />\n      <br />\n      <h3>{ data.getPlayer.name }</h3>\n    </div>\n  );*/\n};\n\nexport default NameSearch;\n"]},"metadata":{},"sourceType":"module"}