{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/Ryan/Desktop/baseball_gql/webapp-hooks/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/Ryan/Desktop/baseball_gql/webapp-hooks/src/components/NameSearch.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation setPlayer($searchStr: String!) {\\n    setPlayerId(searchStr: $searchStr)\\n  }\\n\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { gql } from 'apollo-boost';\nimport { useApolloClient } from '@apollo/react-hooks';\nconst PLAYER_MUTATION = gql(_templateObject()); // NameSearch function for taking text entered and searching for closest player\n// whose name matches the text\n\nfunction NameSearch() {\n  // Initialize ApolloClient so we can get access to ApolloProvider's cache\n  const client = useApolloClient(); // Render JSX element and insert data\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Player's Name\",\n    value: data ? data.getPlayer.searchStr : '',\n    onChange: e => {\n      e.preventDefault();\n      getPlayer({\n        variables: {\n          searchStr: e.target.value\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, data ? data.getPlayer.name : ''));\n}\n\n;\nexport default NameSearch;","map":{"version":3,"sources":["/Users/Ryan/Desktop/baseball_gql/webapp-hooks/src/components/NameSearch.tsx"],"names":["React","gql","useApolloClient","PLAYER_MUTATION","NameSearch","client","data","getPlayer","searchStr","e","preventDefault","variables","target","value","name"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAAuBC,eAAvB,QAA8C,qBAA9C;AAEA,MAAMC,eAAe,GAAGF,GAAH,mBAArB,C,CAOA;AACA;;AACA,SAASG,UAAT,GAA2B;AACzB;AACA,QAAMC,MAAM,GAAGH,eAAe,EAA9B,CAFyB,CAIzB;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,qBAA/B;AAAqD,IAAA,KAAK,EAAEI,IAAI,GAAGA,IAAI,CAACC,SAAL,CAAeC,SAAlB,GAA8B,EAA9F;AAAkG,IAAA,QAAQ,EAAEC,CAAC,IAAI;AAACA,MAAAA,CAAC,CAACC,cAAF;AAAoBH,MAAAA,SAAS,CAAC;AAAEI,QAAAA,SAAS,EAAE;AAAEH,UAAAA,SAAS,EAAEC,CAAC,CAACG,MAAF,CAASC;AAAtB;AAAb,OAAD,CAAT;AAAuD,KAA7L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,IAAI,GAAGA,IAAI,CAACC,SAAL,CAAeO,IAAlB,GAAyB,EAAlC,CAHF,CADF;AAOD;;AAAA;AAED,eAAeV,UAAf","sourcesContent":["import React from \"react\";\nimport { gql } from 'apollo-boost';\nimport { useLazyQuery, useApolloClient } from '@apollo/react-hooks';\n\nconst PLAYER_MUTATION = gql`\n  mutation setPlayer($searchStr: String!) {\n    setPlayerId(searchStr: $searchStr)\n  }\n\n`;\n\n// NameSearch function for taking text entered and searching for closest player\n// whose name matches the text\nfunction NameSearch(): any {\n  // Initialize ApolloClient so we can get access to ApolloProvider's cache\n  const client = useApolloClient();\n\n  // Render JSX element and insert data\n  return (\n    <div>\n      <input type=\"text\" placeholder=\"Enter Player's Name\" value={data ? data.getPlayer.searchStr : ''} onChange={e => {e.preventDefault(); getPlayer({ variables: { searchStr: e.target.value }})} }/>\n      <br/>\n      <h3>{data ? data.getPlayer.name : ''}</h3>\n    </div>\n  )\n};\n\nexport default NameSearch;\n"]},"metadata":{},"sourceType":"module"}