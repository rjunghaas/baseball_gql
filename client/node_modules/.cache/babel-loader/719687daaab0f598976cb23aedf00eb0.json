{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/Ryan/Desktop/baseball_gql/webapp-hooks/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/Ryan/Desktop/baseball_gql/webapp-hooks/src/components/NameSearch.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    getPlayer(searchStr: \\\"Matt Ol\\\")\\n    {\\n      searchStr\\n      name\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks'; //import { baseballActions } from '../state';\n//import { useStateValue } from './BaseballApp';\n//let NAME_SEARCH_URL: string = \"http://192.168.1.67:5000/player?str=\"\n\nconst PLAYER_QUERY = gql(_templateObject()); // NameSearch function for taking text entered and searching for closest player\n// whose name matches the text\n\nfunction NameSearch({\n  searchStr\n}) {\n  // https://github.com/apollographql/apollo-client/blob/version-2.6/docs/source/data/queries.mdx\n  const _useQuery = useQuery(PLAYER_QUERY, {\n    variables: {\n      searchStr: searchStr\n    }\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"'Loading...'\");\n\n  if (error) {\n    console.warn(error);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"`Error! $\", error.message, \"`\");\n  }\n\n  console.log(data);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Enter Player's Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, data.getPlayer.name));\n  /*return (\n    <div>\n      <input placeholder=\"Enter Player's Name\" name=\"playerText\" value={ data.getPlayer.searchStr } onChange={onPlayerTextEntered} />\n      <br />\n      <h3>{ data.getPlayer.name }</h3>\n    </div>\n  );*/\n}\n\n;\nexport default NameSearch;","map":{"version":3,"sources":["/Users/Ryan/Desktop/baseball_gql/webapp-hooks/src/components/NameSearch.tsx"],"names":["React","gql","useQuery","PLAYER_QUERY","NameSearch","searchStr","variables","loading","error","data","console","warn","message","log","getPlayer","name"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB,C,CACA;AACA;AACA;;AAQA,MAAMC,YAAY,GAAGF,GAAH,mBAAlB,C,CAWA;AACA;;AACA,SAASG,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA2C;AACzC;AADyC,oBAERH,QAAQ,CAACC,YAAD,EAAe;AAACG,IAAAA,SAAS,EAAE;AAAED,MAAAA,SAAS,EAAEA;AAAb;AAAZ,GAAf,CAFA;AAAA,QAEjCE,OAFiC,aAEjCA,OAFiC;AAAA,QAExBC,KAFwB,aAExBA,KAFwB;AAAA,QAEjBC,IAFiB,aAEjBA,IAFiB;;AAGzC,MAAIF,OAAJ,EAAa,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAR;;AACb,MAAIC,KAAJ,EAAW;AACTE,IAAAA,OAAO,CAACC,IAAR,CAAaH,KAAb;AACA,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeA,KAAK,CAACI,OAArB,MAAR;AACD;;AAEDF,EAAAA,OAAO,CAACG,GAAR,CAAYJ,IAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,WAAW,EAAC,qBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACK,SAAL,CAAeC,IAApB,CAFF,CADF;AAMA;;;;;;;AAOD;;AAAA;AAED,eAAeX,UAAf","sourcesContent":["import React from \"react\";\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\n//import { baseballActions } from '../state';\n//import { useStateValue } from './BaseballApp';\n//let NAME_SEARCH_URL: string = \"http://192.168.1.67:5000/player?str=\"\n\ntype Player =  {\n  searchStr: string,\n  name: string,\n  id: number\n}\n\nconst PLAYER_QUERY = gql`\n  {\n    getPlayer(searchStr: \"Matt Ol\")\n    {\n      searchStr\n      name\n      id\n    }\n  }\n`;\n\n// NameSearch function for taking text entered and searching for closest player\n// whose name matches the text\nfunction NameSearch({ searchStr }): string {\n  // https://github.com/apollographql/apollo-client/blob/version-2.6/docs/source/data/queries.mdx\n  const { loading, error, data } = useQuery(PLAYER_QUERY, {variables: { searchStr: searchStr}});\n  if (loading) return (<div>'Loading...'</div>);\n  if (error) {\n    console.warn(error);\n    return (<div>`Error! ${error.message}`</div>);\n  }\n\n  console.log(data);\n  return (\n    <div>\n      <input placeholder=\"Enter Player's Name\" />\n      <h3>{data.getPlayer.name}</h3>\n    </div>\n  )\n  /*return (\n    <div>\n      <input placeholder=\"Enter Player's Name\" name=\"playerText\" value={ data.getPlayer.searchStr } onChange={onPlayerTextEntered} />\n      <br />\n      <h3>{ data.getPlayer.name }</h3>\n    </div>\n  );*/\n};\n\nexport default NameSearch;\n"]},"metadata":{},"sourceType":"module"}